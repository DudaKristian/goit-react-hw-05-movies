{"version":3,"file":"static/js/278.f8d5a0f2.chunk.js","mappings":"uMAuEA,UAlEe,WAEX,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,SAE/B,GAA8BC,EAAAA,EAAAA,UAAQ,OAACF,QAAD,IAACA,EAAAA,EAAO,IAA9C,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,YAArC,eAAOK,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACFT,IACAI,EAAWJ,IACXU,EAAAA,EAAAA,IAAYV,EAAOM,IAEvBE,EAAU,cACX,CAACR,IAoBJ,OACI,4BACI,kBAAMW,SApBO,SAAAC,GACjBA,EAAEC,iBAEqB,IAAnBV,EAAQW,SAKZJ,EAAAA,EAAAA,IAAYP,EAASG,GACrBE,EAAU,YACVT,EAAgB,SAAD,OAAUI,IAEH,IAAlBE,EAAOS,QACPN,EAAU,UATVO,MAAM,kBAgBN,WACI,kBACIC,SAAU,SAAAJ,GAAC,OAAIR,EAAWQ,EAAEK,OAAOC,MAAMC,sBACzCC,KAAK,OACLC,MAAM,MACNH,MAAOf,KACX,mBAAQiB,KAAK,SAAb,wBAGJ,wBACKf,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAChB,yBACI,SAAC,KAAD,CACIC,GAAE,kBAAaH,GACfA,GAAIA,EAFR,SAIKC,GAASC,KALTF,QAWG,UAAXhB,IAAsB,gBAAKoB,IAAKC,EAASC,IAAI,e,oLChE1D,EADY,mCCECC,EAAc,gCAGpB,SAAepB,EAAtB,iDAAO,OAAP,oBAAO,WAA2BP,EAAS4B,GAApC,0FAGOC,MAAM,GAAD,OAAIF,EAAJ,gCAAuCG,EAAvC,kBAAoD9B,EAApD,2BACN+B,MAAK,SAAA7B,GAAM,OAAIA,EAAO8B,UACtBD,MAAK,SAAAE,GAAG,OAAIL,EAAKK,EAAIC,YAL3B,sDASCtB,MAAM,GAAD,cATN,+EAaA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BP,GAA7B,0FAEOC,MAAM,GAAD,OAAIF,EAAJ,oCAA2CG,IACjDC,MAAK,SAAA7B,GAAM,OAAIA,EAAO8B,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIC,YAJ5B,sDAMCtB,MAAM,GAAD,cANN,+EAUA,SAAewB,EAAtB,iDAAO,OAAP,oBAAO,WAA4BC,EAAST,GAArC,oEACES,EADF,0EAKOR,MAAM,GAAD,OAAIF,EAAJ,iBAAwBU,EAAxB,oBAA2CP,EAA3C,oBACNC,MAAK,SAAA7B,GAAM,OAAIA,EAAO8B,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,MAPxB,uDASCrB,MAAM,GAAD,cATN,gFAaA,SAAe0B,EAAtB,iDAAO,OAAP,oBAAO,WAA4BD,EAAST,GAArC,0FAEOC,MAAM,GAAD,OAAIF,EAAJ,iBAAwBU,EAAxB,4BAAmDP,EAAnD,oBACNC,MAAK,SAAA7B,GAAM,OAAIA,EAAO8B,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIM,SAJ5B,sDAMC3B,MAAM,GAAD,cANN,+EAUA,SAAe4B,EAAtB,iDAAO,OAAP,oBAAO,WAA4BH,EAAST,GAArC,0FAEOC,MAAM,GAAD,OAAIF,EAAJ,iBAAwBU,EAAxB,4BAAmDP,EAAnD,2BACNC,MAAK,SAAA7B,GAAM,OAAIA,EAAO8B,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIC,YAJ5B,sDAMCtB,MAAM,GAAD,cANN,iF","sources":["pages/Movies/Movies.jsx","servise/KEY.jsx","servise/FETCH.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport {FetchSearch} from '../../servise/FETCH'\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport picture from \"../../images/errorImg.jpg\"\n\nconst Movies = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const query = searchParams.get('query')\n\n    const [request, setRequest] = useState(query??\"\");\n    const [result, setResult] = useState([]);\n    const [status, setStatus] = useState(\"resolved\")\n    \n    useEffect(() => {\n        if (query) {\n            setRequest(query)\n            FetchSearch(query, setResult)\n        }\n        setStatus(\"resolved\")\n    }, [query])\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        \n        if (request.length === 0) {\n            alert(\"input request\")\n            return\n        }\n\n        FetchSearch(request, setResult)\n        setStatus(\"resolved\")\n        setSearchParams(`query=${request}`)\n\n        if (result.length === 0) {\n            setStatus(\"error\")\n            return\n        }\n    }\n    \n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    onChange={e => setRequest(e.target.value.toLocaleLowerCase())}\n                    type=\"text\"\n                    width=\"300\"\n                    value={request} /> \n                <button type=\"submit\">Search</button>\n            </form>\n\n            <ul>\n                {result.map(({ id, title, name }) => \n            <li key={id}>\n                <Link\n                    to={`/movies/${id}`}\n                    id={id}\n                >\n                    {title || name}\n                </Link>\n            </li>\n        ) }\n            </ul>\n\n            {status === \"error\" && <img src={picture} alt=\"error\" />}\n            \n        </div>\n    )\n}\n\nexport default Movies\n\n","const KEY = \"7b66a9815954757a118f4f7577a8110b\";\nexport default KEY","import KEY from \"./KEY\"\n\nexport const fetchPrefix = \"https://api.themoviedb.org/3/\";\n\n\nexport async function FetchSearch(request, hook) {\n\n    try {\n        await fetch(`${fetchPrefix}search/movie?api_key=${KEY}&query=${request}&language=en-US&page=1`)\n            .then(result => result.json())\n            .then(arr => hook(arr.results))\n            \n        \n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchTrending(hook) {\n    try {\n        await fetch(`${fetchPrefix}trending/all/day?api_key=${KEY}`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.results))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchDetails(movieId, hook) {\n    if (!movieId) {\n        return\n    }\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}?api_key=${KEY}&language=en-US`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchCredits(movieId, hook) {\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.cast))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchRewiews(movieId, hook) {\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.results))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\n"],"names":["useSearchParams","searchParams","setSearchParams","query","get","useState","request","setRequest","result","setResult","status","setStatus","useEffect","FetchSearch","onSubmit","e","preventDefault","length","alert","onChange","target","value","toLocaleLowerCase","type","width","map","id","title","name","to","src","picture","alt","fetchPrefix","hook","fetch","KEY","then","json","arr","results","FetchTrending","FetchDetails","movieId","FetchCredits","cast","FetchRewiews"],"sourceRoot":""}