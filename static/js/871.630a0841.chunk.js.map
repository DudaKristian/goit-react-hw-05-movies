{"version":3,"file":"static/js/871.630a0841.chunk.js","mappings":"8LA0CA,UAtCgB,WAEZ,IAAMA,GAAUC,EAAAA,EAAAA,MAEhB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaN,EAASI,KACvB,CAACJ,IAECG,EAAL,CACA,IAAuB,IAAnBA,EAAOI,QACP,OAAO,SAAC,KAAD,CAAUC,GAAG,IAAIC,SAAO,IAGnC,IAAMC,EAAQ,CACVC,UAAW,QAGf,OACI,yBAE0B,IAAlBR,EAAOS,QACH,wBACKT,EAAOU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAP,OACR,eAAaL,MAAOA,EAApB,UACI,uBAAIK,KADCD,SAMb,yE,oLClCxB,EADY,mCCECE,EAAc,gCAGpB,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAASC,GAApC,0FAGOC,MAAM,GAAD,OAAIJ,EAAJ,gCAAuCK,EAAvC,kBAAoDH,EAApD,2BACNI,MAAK,SAAAnB,GAAM,OAAIA,EAAOoB,UACtBD,MAAK,SAAAE,GAAG,OAAIL,EAAKK,EAAIC,YAL3B,sDASCC,MAAM,GAAD,cATN,+EAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BR,GAA7B,0FAEOC,MAAM,GAAD,OAAIJ,EAAJ,oCAA2CK,IACjDC,MAAK,SAAAnB,GAAM,OAAIA,EAAOoB,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIC,YAJ5B,sDAMCC,MAAM,GAAD,cANN,+EAUA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAA4B5B,EAASmB,GAArC,oEACEnB,EADF,0EAKOoB,MAAM,GAAD,OAAIJ,EAAJ,iBAAwBhB,EAAxB,oBAA2CqB,EAA3C,oBACNC,MAAK,SAAAnB,GAAM,OAAIA,EAAOoB,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,MAPxB,uDASCE,MAAM,GAAD,cATN,gFAaA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,WAA4B7B,EAASmB,GAArC,0FAEOC,MAAM,GAAD,OAAIJ,EAAJ,iBAAwBhB,EAAxB,4BAAmDqB,EAAnD,oBACNC,MAAK,SAAAnB,GAAM,OAAIA,EAAOoB,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIM,SAJ5B,sDAMCJ,MAAM,GAAD,cANN,+EAUA,SAAepB,EAAtB,iDAAO,OAAP,oBAAO,WAA4BN,EAASmB,GAArC,0FAEOC,MAAM,GAAD,OAAIJ,EAAJ,iBAAwBhB,EAAxB,4BAAmDqB,EAAnD,2BACNC,MAAK,SAAAnB,GAAM,OAAIA,EAAOoB,UACtBD,MAAK,SAAAE,GAAG,OAAKL,EAAKK,EAAIC,YAJ5B,sDAMCC,MAAM,GAAD,cANN","sources":["pages/Reviews/Reviews.jsx","servise/KEY.jsx","servise/FETCH.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useOutletContext, Navigate } from \"react-router-dom\"\nimport { FetchRewiews } from \"../../servise/FETCH\"\n\nconst Reviews = () => {\n    \n    const movieId = useOutletContext();\n\n    const [result, setResult] = useState([])\n\n    useEffect(() => {\n        FetchRewiews(movieId, setResult)\n    }, [movieId])\n    \n    if (!result) { return }\n    if (result.success === false) {\n        return <Navigate to=\"*\" replace />;\n    }\n\n    const style = {\n        listStyle: \"none\"\n    }\n\n    return (\n        <div>\n                {\n                result.length !== 0 ? ( \n                    <ul>\n                        {result.map(({ id, content }) => (\n                            <li key={id} style={style}>\n                                <p>{content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                    ) : (\n                        <p>We don't have any reviews for this movie</p>\n                    )                    \n                }\n        </div>\n    )\n}\n\nexport default Reviews\n\n","const KEY = \"7b66a9815954757a118f4f7577a8110b\";\nexport default KEY","import KEY from \"./KEY\"\n\nexport const fetchPrefix = \"https://api.themoviedb.org/3/\";\n\n\nexport async function FetchSearch(request, hook) {\n\n    try {\n        await fetch(`${fetchPrefix}search/movie?api_key=${KEY}&query=${request}&language=en-US&page=1`)\n            .then(result => result.json())\n            .then(arr => hook(arr.results))\n            \n        \n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchTrending(hook) {\n    try {\n        await fetch(`${fetchPrefix}trending/all/day?api_key=${KEY}`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.results))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchDetails(movieId, hook) {\n    if (!movieId) {\n        return\n    }\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}?api_key=${KEY}&language=en-US`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchCredits(movieId, hook) {\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.cast))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\nexport async function FetchRewiews(movieId, hook) {\n    try {\n        await fetch(`${fetchPrefix}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n            .then(result => result.json())\n            .then(arr =>  hook(arr.results))\n    } catch (e) {\n        alert(`${e}`)\n    }\n};\n\n"],"names":["movieId","useOutletContext","useState","result","setResult","useEffect","FetchRewiews","success","to","replace","style","listStyle","length","map","id","content","fetchPrefix","FetchSearch","request","hook","fetch","KEY","then","json","arr","results","alert","FetchTrending","FetchDetails","FetchCredits","cast"],"sourceRoot":""}